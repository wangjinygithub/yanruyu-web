
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    # 启用 gzip 压缩功能
    gzip  on;
    
    # 默认值是1.1，就是说对HTTP/1.1协议的请求才会进行gzip压缩
    gzip_http_version 1.1;
    
    # 压缩级别，1压缩比最小处理速度最快，9压缩比最大但处理最慢，同时也最消耗CPU,一般设置为3就可以了
    gzip_comp_level 6;

    gzip_types text/plain application/javascript text/css application/xml image/jpeg image/gif image/png;
	
    # nginx 做前端代理时启用该选项，表示无论后端服务器的headers头返回什么信息，都无条件启用压缩
    gzip_proxied any;
    
    # 最小压缩的页面，如果页面过于小，可能会越压越大，这里规定大于1K的页面才启用压缩
    gzip_min_length  1024;
    
    # 禁用IE6的gzip压缩
    gzip_disable "MSIE [1-6].(?!.*SV1)";

    server {
      listen       8083;
      server_name  localhost11;
      rewrite ^/login(.)* / permanent;
	
	  
	  
      location / {
        root   dist/;
        index  index.html index.htm ;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET';
      }
	  
	   location /proxy/ {
            proxy_pass http://114.116.205.208:9000/;
            proxy_set_header Host $host:$server_port;  
            proxy_set_header X-Real-IP $remote_addr;  
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  
     }
	   location /proxyNet/ {
            proxy_pass http://114.116.205.208:7070/;
            proxy_set_header Host $host:$server_port;  
            proxy_set_header X-Real-IP $remote_addr;  
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  
     }
	 
	 location /proxyMap/ {
			proxy_pass http://114.116.205.208:7080/;
            proxy_set_header Host $host:$server_port;  
            proxy_set_header X-Real-IP $remote_addr;  
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Request-Proxy-Key proxyNet;
		}

      

    }
	
	
	server {
      listen       8084;
      server_name  localhost2;
      rewrite ^/login(.)* / permanent;
	
	  
	  
      location / {
        root   dist/;
        index  index.html index.htm ;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET';
      }
	  
	   location /proxy/ {
            proxy_pass http://10.39.0.36:8081/;
            proxy_set_header Host $host:$server_port;  
            proxy_set_header X-Real-IP $remote_addr;  
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  
     }
	

    }
	
	
	server {
      listen       8085;
      server_name  localhost3;
      rewrite ^/login(.)* / permanent;
	
	  
	  
      location / {
        root   oms/;
        index  index.html index.htm ;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET';
      }
	  
	   location /proxy/ {
            proxy_pass http://10.39.0.36:8081/;
            proxy_set_header Host $host:$server_port;  
            proxy_set_header X-Real-IP $remote_addr;  
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  
     }
	

    }
}
